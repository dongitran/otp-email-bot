name: Init Vault

on:
  push:
    branches:
      - init-vault
  workflow_dispatch:

jobs:
  send-notification-started:
    runs-on: ubuntu-latest
    steps:
      - name: Send Telegram Notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_GROUP_DEPLOYMENTS }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: markdown
          disable_web_page_preview: true
          message: |
            *üöÄ OTP Email Bot - Init Vault *  üèÉ‚Äç‚ôÇÔ∏è${{ github.run_number }}

            *üë§ Committer:* [${{ github.actor }}](https://github.com/${{ github.actor }})
            *üìù Commit message:* ${{ github.event.commits[0].message }}
            *üì¶ Repository:* ${{ github.repository }}
            *üîç See changes:* [View changes](https://github.com/${{ github.repository }}/commit/${{github.sha}})

            Started üöÅÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èüöÅÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èüöÅÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èüöÅÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èÔ∏è

  deploy:
    runs-on: ubuntu-latest
    env:
      DO_ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install doctl
        run: |
          curl -sL https://github.com/digitalocean/doctl/releases/download/v1.61.0/doctl-1.61.0-linux-amd64.tar.gz | tar -xzv
          sudo mv ./doctl /usr/local/bin/doctl
          doctl version

      - name: Download kubectl
        uses: steebchen/kubectl@v2.0.0
        with:
          version: latest

      - name: Authenticate with DigitalOcean
        run: |
          doctl auth init -t $DO_ACCESS_TOKEN

      - name: Apply Kubernetes deployment
        env:
          K8S_ID: ${{ secrets.K8S_ID }}
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          TELEGRAM_GROUP_ID: ${{ secrets.TELEGRAM_GROUP_ID }}
          KAFKA_TELEGRAM_GROUP_ID: ${{ secrets.KAFKA_TELEGRAM_GROUP_ID }}
          KAFKA_TELEGRAM_TOPIC_ID: ${{ secrets.KAFKA_TELEGRAM_TOPIC_ID }}
          KAFKA_PRODUCER_BROKER_DB_CHANGE: ${{ secrets.KAFKA_PRODUCER_BROKER_DB_CHANGE }}
          KAFKA_TOPIC_OTP_EMAIL: ${{ secrets.KAFKA_TOPIC_OTP_EMAIL }}
          MONGO_LOG_URL: ${{ secrets.MONGO_LOG_URL }}
          MONGO_DB_NAME: ${{ secrets.MONGO_DB_NAME }}
          OTP_DB_NAME: ${{ secrets.OTP_DB_NAME }}
          OTP_TABLE_NAME: ${{ secrets.OTP_TABLE_NAME }}
        run: |
          doctl kubernetes cluster kubeconfig save ${K8S_ID}
          kubectl exec -n vault -i vault-0 -- vault kv put \
            kv/otp-email-bot-dev \
            BOT_TOKEN="${BOT_TOKEN}" \
            TELEGRAM_GROUP_ID="${TELEGRAM_GROUP_ID}" \
            KAFKA_TELEGRAM_GROUP_ID="${KAFKA_TELEGRAM_GROUP_ID}" \
            KAFKA_TELEGRAM_TOPIC_ID="${KAFKA_TELEGRAM_TOPIC_ID}" \
            KAFKA_PRODUCER_BROKER_DB_CHANGE="${KAFKA_PRODUCER_BROKER_DB_CHANGE}" \
            KAFKA_TOPIC_OTP_EMAIL="${KAFKA_TOPIC_OTP_EMAIL}" \
            MONGO_LOG_URL="${MONGO_LOG_URL}" \
            MONGO_DB_NAME="${MONGO_DB_NAME}" \
            OTP_DB_NAME="${OTP_DB_NAME}" \
            OTP_TABLE_NAME="${OTP_TABLE_NAME}"

          kubectl exec -n vault -i vault-0 -- vault policy write otp-email-bot-svc-policy - <<EOH
          path "kv/data/otp-email-bot-dev" {
            capabilities = ["read"]
          }
          EOH

          kubectl exec -n vault -i vault-0 -- vault write auth/kubernetes/role/otp-email-bot-dev \
            bound_service_account_names=otp-email-bot-dev-auth \
            bound_service_account_namespaces=otp-email-bot \
            policies=otp-email-bot-svc-policy \
            ttl=72h

  send-notification-deploy-failed:
    needs: deploy
    runs-on: ubuntu-latest
    if: ${{ failure() && needs.deploy.result == 'failure' }}
    steps:
      - name: Send Telegram Notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_GROUP_DEPLOYMENTS }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: markdown
          disable_web_page_preview: true
          message: |
            *‚ùå OTP Email Bot - Init Vault *  üèÉ‚Äç‚ôÇÔ∏è${{ github.run_number }}
            
            *üë§ Committer:* [${{ github.actor }}](https://github.com/${{ github.actor }})
            *üìù Commit message:* ${{ github.event.commits[0].message }}
            *üì¶ Repository:* ${{ github.repository }}
            *üîç See changes:* [View changes](https://github.com/${{ github.repository }}/commit/${{github.sha}})

            Deploy Failed!!!
            üòêÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èüòêÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èüòêÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èüòêÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èüòêÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èüòêÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èÔ∏è

  send-notification-successful:
    needs: deploy
    runs-on: ubuntu-latest
    if: ${{ success() && needs.deploy.result == 'success' }}
    steps:
      - name: Send Telegram Notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_GROUP_DEPLOYMENTS }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: markdown
          disable_web_page_preview: true
          message: |
            *üéâ OTP Email Bot - Init Vault *  üèÉ‚Äç‚ôÇÔ∏è${{ github.run_number }}
            
            *üë§ Committer:* [${{ github.actor }}](https://github.com/${{ github.actor }})
            *üìù Commit message:* ${{ github.event.commits[0].message }}
            *üì¶ Repository:* ${{ github.repository }}
            *üîç See changes:* [View changes](https://github.com/${{ github.repository }}/commit/${{github.sha}})

            Successful
            üöÄÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èüöÄÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èüöÄÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èüöÄÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èüöÄÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èüöÄÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èÔ∏è